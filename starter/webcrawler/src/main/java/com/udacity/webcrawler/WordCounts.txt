PriorityQueue<Map.Entry<String, Integer>> sortedCounts =
        new PriorityQueue<>(wordCounts.size(), new WordCountComparator());
    sortedCounts.addAll(wordCounts.entrySet());
    Map<String, Integer> topCounts = new LinkedHashMap<>();
    for (int i = 0; i < Math.min(popularWordCount, wordCounts.size()); i++) {
      Map.Entry<String, Integer> entry = sortedCounts.poll();
      topCounts.put(entry.getKey(), entry.getValue());
    }
